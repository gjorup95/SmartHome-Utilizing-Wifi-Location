{"version":3,"sources":["sensors.js"],"names":["express","require","router","Router","resources","req","res","next","result","pi","sensors","route","get","temperature","humidity","distance","module","exports"],"mappings":"aACA,IAAIA,QAAUC,QAAQ,WADtBC,OAAAF,QAAAG,SACAC,UAAcH,QAAQ,wBAAtBC,OAEEE,MAAS,KAAGH,IAAAA,SAAQI,EAAAC,EAAAC,GAGpBF,EAAIG,OAASJ,UAAUK,GAAGC,QAD5BR,MAEEK,OAAII,MAAI,YAAAC,IAAA,SAAAP,EAAAC,EAAAC,GAFVF,EAAAG,OAAAJ,UAAAK,GAAAC,QAKAR,MAEEK,OAAII,MAAA,gBAAAC,IAAA,SAAAP,EAAAC,EAAAC,GAFNF,EAAAG,OAAAJ,UAAAK,GAAAC,QAAAG,YAIAX,MAGCA,OAHDS,MAAA,aAAAC,IAAA,SAAAP,EAAAC,EAAAC,GAKAL,EAAMM,OAAOJ,UAAbK,GAA0BG,QAAIE,SAC5BT,MAEDH,OAHDS,MAAA,eAAAC,IAAA,SAAAP,EAAAC,EAAAC,GAIAL,EAAMM,OAAOJ,UAAAK,GAAeG,QAAIG,SAC9BV,MAIFW,OAAOC,QAAUf","file":"sensors.min.js","sourcesContent":["// Final version\nvar express = require('express'),\n  router = express.Router(),\n  resources = require('./../resources/model');\n\nrouter.route('/').get(function (req, res, next) {\n  req.result = resources.pi.sensors; //#A\n  next(); //#B\n});\n\nrouter.route('/sensors').get(function (req, res, next) {\n  req.result = resources.pi.sensors;\n  next();\n});\nrouter.route('/temperature').get(function (req, res, next) {\n  req.result = resources.pi.sensors.temperature;\n  next();\n});\n\nrouter.route('/humidity').get(function (req, res, next) {\n  req.result = resources.pi.sensors.humidity;\n  next();\n});\nrouter.route('/ultrasonic').get(function(req, res, next){\n  req.result = resources.pi.sensors.distance;\n  next();\n});\n\nmodule.exports = router;\n\n//#A Assign the results to a new property of the req object that you pass along from middleware to middleware\n//#B Call the next middleware; the framework will ensure the next middleware gets access to req (including the req.result) and res\n\n"]}