{"version":3,"sources":["sendCloudToDeviceMessage.js"],"names":["Client","require","Message","connectionString","serviceClient","fromConnectionString","printResultFor","op","err","res","console","log","toString","constructor","name","receiveFeedback","receiver","on","msg","getData","open","error","message","getFeedbackReceiver","ack","randomState","Math","floor","random","data","JSON","stringify","messageId","targetDevice"],"mappings":"AAAA,aAEA,IAAIA,OAASC,QAAQ,gBAAgBD,OACjCE,QAAUD,QAAQ,oBAAoBC,QAEtCC,iBAAmB,+HAAnBA,aAAAA,cAGAC,cAAgBJ,OAAOK,qBAAqBF,kBAEhD,SAASG,eAAeC,GACpB,OAAO,SAAqBC,EAAKC,GAC3BD,GAAKE,QAAQC,IAAMJ,EAAG,WAAaC,EAAII,YACvCH,GAAKC,QAAQC,IAAMJ,EAAG,YAAcE,EAAII,YAAYC,OAI5D,SAASC,gBAAgBP,EAAKQ,GAC5BA,EAAAC,GAAY,UAAW,SAAUC,GAC/BR,QAAQC,IAAI,qBACZD,QAAQC,IAAIO,EAAIC,UAAUP,SAAS,YAIvCR,cAAcgB,KAAK,SAAUZ,GAC3B,GAAIA,EACFE,QAAQW,MAAM,sBAAwBb,EAAIc,aACrC,CACLZ,QAAQC,IAAI,4BACZP,cAAcmB,oBAAoBR,iBAClC,IAAIO,EAAU,IAAIpB,QAAQ,4BAC1BoB,EAAQE,IAAM,OACd,IAAMC,EAAkBC,KAACC,MAAUD,KAACE,SAAeF,KAACC,MAApD,IACAL,EAAQO,KAAOC,KAAKC,UAAU,CAAAN,YAAAA,IAACA,EAAAA,UAAaA,gBAA5Cf,QAAAC,IAAA,oBAAAW,EAAAH,WACAG,cAAQU,KAAYC,aAApBX,EAAAhB,eAAA","file":"sendCloudToDeviceMessage.min.js","sourcesContent":["'use strict';\n  \nvar Client = require('azure-iothub').Client;\nvar Message = require('azure-iot-common').Message;\n\nvar connectionString = 'HostName=GjorupPi.azure-devices.net;SharedAccessKeyName=service;SharedAccessKey=oREm8bL3LGVub1PWhbCTS28KFWF5EbH9XdhZP1xeUb0=';\nvar targetDevice = 'GjorupPi001';\n\nvar serviceClient = Client.fromConnectionString(connectionString);\n\nfunction printResultFor(op) {\n    return function printResult(err, res) {\n      if (err) console.log(op + ' error: ' + err.toString());\n      if (res) console.log(op + ' status: ' + res.constructor.name);\n    };\n  }\n  \n  function receiveFeedback(err, receiver){\n    receiver.on('message', function (msg) {\n      console.log('Feedback message:')\n      console.log(msg.getData().toString('utf-8'));\n    });\n  }\n\n  serviceClient.open(function (err) {\n    if (err) {\n      console.error('Could not connect: ' + err.message);\n    } else {\n      console.log('Service client connected');\n      serviceClient.getFeedbackReceiver(receiveFeedback);\n      var message = new Message('Cloud to device message.');\n      message.ack = 'full';\n      const randomState = Math.floor(Math.random() * Math.floor(3));\n      message.data = JSON.stringify({randomState: randomState});\n      message.messageId = \"My Message ID\";\n      console.log('Sending message: ' + message.getData());\n      serviceClient.send(targetDevice, message, printResultFor('send'));\n    }\n  });"]}