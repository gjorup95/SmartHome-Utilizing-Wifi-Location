{"version":3,"sources":["sendCloudToDeviceMessage.js"],"names":["Client","require","Message","connectionString","targetDevice","serviceClient","fromConnectionString","printResultFor","op","printResult","err","res","console","log","toString","constructor","name","receiveFeedback","receiver","on","msg","getData","open","error","message","getFeedbackReceiver","ack","randomState","Math","floor","random","data","JSON","stringify","messageId","send"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,MAArC;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAP,CAA4BC,OAA1C;;AAEA,IAAIC,gBAAgB,GAAG,8HAAvB;AACA,IAAIC,YAAY,GAAG,aAAnB;AAEA,IAAIC,aAAa,GAAGL,MAAM,CAACM,oBAAP,CAA4BH,gBAA5B,CAApB;;AAEA,SAASI,cAAT,CAAwBC,EAAxB,EAA4B;AACxB,SAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AACpC,QAAID,GAAJ,EAASE,OAAO,CAACC,GAAR,CAAYL,EAAE,GAAG,UAAL,GAAkBE,GAAG,CAACI,QAAJ,EAA9B;AACT,QAAIH,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYL,EAAE,GAAG,WAAL,GAAmBG,GAAG,CAACI,WAAJ,CAAgBC,IAA/C;AACV,GAHD;AAID;;AAED,SAASC,eAAT,CAAyBP,GAAzB,EAA8BQ,QAA9B,EAAuC;AACrCA,EAAAA,QAAQ,CAACC,EAAT,CAAY,SAAZ,EAAuB,UAAUC,GAAV,EAAe;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,OAAJ,GAAcP,QAAd,CAAuB,OAAvB,CAAZ;AACD,GAHD;AAID;;AAEDT,aAAa,CAACiB,IAAd,CAAmB,UAAUZ,GAAV,EAAe;AAChC,MAAIA,GAAJ,EAAS;AACPE,IAAAA,OAAO,CAACW,KAAR,CAAc,wBAAwBb,GAAG,CAACc,OAA1C;AACD,GAFD,MAEO;AACLZ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAR,IAAAA,aAAa,CAACoB,mBAAd,CAAkCR,eAAlC;AACA,QAAIO,OAAO,GAAG,IAAItB,OAAJ,CAAY,0BAAZ,CAAd;AACAsB,IAAAA,OAAO,CAACE,GAAR,GAAc,MAAd;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAApB;AACAL,IAAAA,OAAO,CAACO,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,WAAW,EAAEA;AAAd,KAAf,CAAf;AACAH,IAAAA,OAAO,CAACU,SAAR,GAAoB,eAApB;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBW,OAAO,CAACH,OAAR,EAAlC;AACAhB,IAAAA,aAAa,CAAC8B,IAAd,CAAmB/B,YAAnB,EAAiCoB,OAAjC,EAA0CjB,cAAc,CAAC,MAAD,CAAxD;AACD;AACF,CAdD","sourcesContent":["'use strict';\n  \nvar Client = require('azure-iothub').Client;\nvar Message = require('azure-iot-common').Message;\n\nvar connectionString = 'HostName=GjorupPi.azure-devices.net;SharedAccessKeyName=service;SharedAccessKey=oREm8bL3LGVub1PWhbCTS28KFWF5EbH9XdhZP1xeUb0=';\nvar targetDevice = 'GjorupPi001';\n\nvar serviceClient = Client.fromConnectionString(connectionString);\n\nfunction printResultFor(op) {\n    return function printResult(err, res) {\n      if (err) console.log(op + ' error: ' + err.toString());\n      if (res) console.log(op + ' status: ' + res.constructor.name);\n    };\n  }\n  \n  function receiveFeedback(err, receiver){\n    receiver.on('message', function (msg) {\n      console.log('Feedback message:')\n      console.log(msg.getData().toString('utf-8'));\n    });\n  }\n\n  serviceClient.open(function (err) {\n    if (err) {\n      console.error('Could not connect: ' + err.message);\n    } else {\n      console.log('Service client connected');\n      serviceClient.getFeedbackReceiver(receiveFeedback);\n      var message = new Message('Cloud to device message.');\n      message.ack = 'full';\n      const randomState = Math.floor(Math.random() * Math.floor(3));\n      message.data = JSON.stringify({randomState: randomState});\n      message.messageId = \"My Message ID\";\n      console.log('Sending message: ' + message.getData());\n      serviceClient.send(targetDevice, message, printResultFor('send'));\n    }\n  });"],"file":"sendCloudToDeviceMessage.dev.js"}