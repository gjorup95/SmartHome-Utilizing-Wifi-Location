{"version":3,"sources":["ultrasonicPlugin.js"],"names":["resources","require","utils","sensor","model","pi","sensors","pluginName","Gpio","exports","start","params","MICROSECDONDS_PER_CM","trigger","mode","OUTPUT","echo","INPUT","alert","digitalWrite","watchHCSR04","startTick","on","level","tick","endTick","diff","result","toFixed","distance","value","setInterval","stop","clearInterval"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAvB;AAAA,IACEC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CADjB;;AAEE,IAAIE,MAAJ;AACA,IAAIC,KAAK,GAAGJ,SAAS,CAACK,EAAV,CAAaC,OAAzB;AACA,IAAIC,UAAU,GAAG,4BAAjB;;AACE,IAAMC,IAAI,GAAGP,OAAO,CAAC,QAAD,CAAP,CAAkBO,IAA/B,C,CACJ;;;AACAC,OAAO,CAACC,KAAR,GAAgB,UAAUC,MAAV,EAAiB;AAC/B,MAAMC,oBAAoB,GAAG,MAAI,KAAjC;AACA,MAAMC,OAAO,GAAG,IAAIL,IAAJ,CAAS,EAAT,EAAa;AAACM,IAAAA,IAAI,EAAEN,IAAI,CAACO;AAAZ,GAAb,CAAhB;AACA,MAAMC,IAAI,GAAG,IAAIR,IAAJ,CAAS,EAAT,EAAa;AAACM,IAAAA,IAAI,EAAEN,IAAI,CAACS,KAAZ;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAb,CAAb;AAIAL,EAAAA,OAAO,CAACM,YAAR,CAAqB,CAArB,EAP+B,CAON;;AAEzB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIC,SAAJ;AAEAL,IAAAA,IAAI,CAACM,EAAL,CAAQ,OAAR,EAAiB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAChC,UAAID,KAAK,IAAI,CAAb,EAAgB;AACdF,QAAAA,SAAS,GAAGG,IAAZ;AACD,OAFD,MAEO;AACL,YAAMC,OAAO,GAAGD,IAAhB;AACA,YAAME,IAAI,GAAG,CAACD,OAAO,IAAI,CAAZ,KAAkBJ,SAAS,IAAI,CAA/B,CAAb,CAFK,CAE2C;;AAChDM,QAAAA,MAAM,GAAG,CAACD,IAAI,GAAG,CAAP,GAAWd,oBAAZ,EAAkCgB,OAAlC,CAA0C,CAA1C,CAAT;AACAxB,QAAAA,KAAK,CAACyB,QAAN,CAAeC,KAAf,GAAuBH,MAAvB,CAJK,CAKL;AACD;AACF,KAVD;AAWD,GAdD;;AAgBAP,EAAAA,WAAW,GAzBoB,CA2B/B;;AACAW,EAAAA,WAAW,CAAC,YAAM;AAChBlB,IAAAA,OAAO,CAACA,OAAR,CAAgB,EAAhB,EAAoB,CAApB,EADgB,CACQ;AACzB,GAFU,EAER,IAFQ,CAAX;AAID,CAhCD;;AAkCAJ,OAAO,CAACuB,IAAR,GAAe,YAAU;AACxBC,EAAAA,aAAa;AACb,CAFD","sourcesContent":["var resources = require('../../resources/model'),\n  utils = require('../../utils/utils.js');\n  var sensor;\n  var model = resources.pi.sensors;\n  var pluginName = 'Ultrasonic distance sensor';\n    const Gpio = require('pigpio').Gpio;\n// The number of microseconds it takes sound to travel 1cm at 20 degrees celcius\nexports.start = function (params){\n  const MICROSECDONDS_PER_CM = 1e6/34321;\n  const trigger = new Gpio(23, {mode: Gpio.OUTPUT});\n  const echo = new Gpio(24, {mode: Gpio.INPUT, alert: true});\n  \n  \n  \n  trigger.digitalWrite(0); // Make sure trigger is low\n  \n  const watchHCSR04 = () => {\n    let startTick;\n  \n    echo.on('alert', (level, tick) => {\n      if (level == 1) {\n        startTick = tick;\n      } else {\n        const endTick = tick;\n        const diff = (endTick >> 0) - (startTick >> 0); // Unsigned 32 bit arithmetic\n        result = (diff / 2 / MICROSECDONDS_PER_CM).toFixed(2);\n        model.distance.value = result;\n        //console.log(result);\n      }\n    });\n  };\n  \n  watchHCSR04();\n  \n  // Trigger a distance measurement once per second\n  setInterval(() => {\n    trigger.trigger(10, 1); // Set trigger high for 10 microseconds\n  }, 1000);\n  \n}\n\nexports.stop = function(){\n clearInterval();\n}\n"],"file":"ultrasonicPlugin.dev.js"}