"use strict";var interval,sensor,resources=require("./../../resources/model"),utils=require("./../../utils/utils.js"),model=resources.pi.sensors,pluginName="Temperature & Humidity",localParams={simulate:!1,frequency:5e3};function connectHardware(){var a=require("node-dht-sensor"),r={initialize:function(){return a.initialize(11,model.temperature.gpio)},read:function(){var e=a.read();model.temperature.value=parseFloat(e.temperature.toFixed(2)),model.humidity.value=parseFloat(e.humidity.toFixed(2)),showValue(),setTimeout(function(){r.read()},localParams.frequency)}};r.initialize()?(console.info("Hardware %s sensor started!",pluginName),r.read()):console.warn("Failed to initialize sensor!")}function simulate(){interval=setInterval(function(){model.temperature.value=utils.randomInt(0,40),model.humidity.value=utils.randomInt(0,100),showValue()},localParams.frequency),console.info("Simulated %s sensor started!",pluginName)}function showValue(){console.info("Temperature: %s C, humidity %s %",model.temperature.value,model.humidity.value)}exports.start=function(e){(localParams=e).simulate?simulate():connectHardware()},exports.stop=function(){params.simulate?clearInterval(interval):sensor.unexport(),console.info("%s plugin stopped!",pluginName)};
//# sourceMappingURL=DHT22SensorPlugin.min.js.map
