{"version":3,"sources":["http.js"],"names":["express","require","actuatorsRoutes","sensorRoutes","resources","converter","cors","bodyParser","app","path","use","json","get","req","res","sendFile","join","__dirname","module","exports"],"mappings":";;AAAA;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;AAAA,IACEC,eAAe,GAAGD,OAAO,CAAC,uBAAD,CAD3B;AAAA,IAEEE,YAAY,GAAGF,OAAO,CAAC,qBAAD,CAFxB;AAAA,IAGC;AACCG,SAAS,GAAGH,OAAO,CAAC,sBAAD,CAJrB;AAAA,IAKEI,SAAS,GAAGJ,OAAO,CAAC,2BAAD,CALrB;AAAA,IAMEK,IAAI,GAAGL,OAAO,CAAC,MAAD,CANhB;AAAA,IAOEM,UAAU,GAAGN,OAAO,CAAC,aAAD,CAPtB;;AAQCO,GAAG,GAAGR,OAAO,EAAb,C,CACA;;AACD,IAAIS,IAAI,GAAGR,OAAO,CAAC,MAAD,CAAlB;;AACCO,GAAG,CAACE,GAAJ,CAAQH,UAAU,CAACI,IAAX,EAAR;AACDH,GAAG,CAACE,GAAJ,CAAQJ,IAAI,EAAZ;AAEAE,GAAG,CAACE,GAAJ,CAAQ,eAAR,EAAyBR,eAAzB;AACAM,GAAG,CAACE,GAAJ,CAAQ,aAAR,EAAuBP,YAAvB;AAEAK,GAAG,CAACI,GAAJ,CAAQ,KAAR,EAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACjCA,EAAAA,GAAG,CAACC,QAAJ,CAAaN,IAAI,CAACO,IAAL,CAAUC,SAAS,GAAG,uBAAtB,CAAb;AACD,CAFD;AAGA;;;;;;;;;AAUA;;AACAT,GAAG,CAACE,GAAJ,CAAQL,SAAS,EAAjB;AACAa,MAAM,CAACC,OAAP,GAAiBX,GAAjB","sourcesContent":["// Final version\nvar express = require('express'),\n  actuatorsRoutes = require('./../routes/actuators'),\n  sensorRoutes = require('./../routes/sensors'),\n //TODO: thingsRoutes = require('./../routes/things'),\n  resources = require('./../resources/model'),\n  converter = require('./../middleware/converter'),\n  cors = require('cors'),\n  bodyParser = require('body-parser');\n app = express();\n //app.set('view engine', 'pug');\nvar path = require('path');\n app.use(bodyParser.json());\napp.use(cors());\n\napp.use('/pi/actuators', actuatorsRoutes);\napp.use('/pi/sensors', sensorRoutes);\n\napp.get('/pi', function (req, res) {\n  res.sendFile(path.join(__dirname + './../views/index.html'));\n});\n/*app.get('/pi', function (req, res) {\n  res.render('index', { title: 'Web of things', message: 'Welcome to Gjorup Raspberry Pi', \n  distSensor: resources.pi.sensors.distance.name, distSensorValue: resources.pi.sensors.distance.value, humSens: resources.pi.sensors.humidity.value, \n  humName: resources.pi.sensors.humidity.name, tempSens: resources.pi.sensors.temperature.value, \n  tempName: resources.pi.sensors.temperature.name, led1: resources.pi.actuators.leds[1].value,\n  led2: resources.pi.actuators.leds[2].value, led3: resources.pi.actuators.leds[3].value,\n  })\n})\n*/\n\n// For representation design\napp.use(converter());\nmodule.exports = app;\n\n"],"file":"http.dev.js"}