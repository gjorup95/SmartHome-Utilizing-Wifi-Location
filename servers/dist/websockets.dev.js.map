{"version":3,"sources":["websockets.js"],"names":["WebSocketServer","require","Server","resources","exports","listen","server","wss","console","info","on","ws","url","upgradeReq","Object","observe","selectResouce","changes","send","JSON","stringify","object","e","log","parts","split","shift","result","i","length"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcC,MAApC;AAAA,IACEC,SAAS,GAAGF,OAAO,CAAC,sBAAD,CADrB;;AAGAG,OAAO,CAACC,MAAR,GAAiB,UAASC,MAAT,EAAiB;AAChC,MAAIC,GAAG,GAAG,IAAIP,eAAJ,CAAoB;AAACM,IAAAA,MAAM,EAAEA;AAAT,GAApB,CAAV,CADgC,CACiB;;AACjDE,EAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACAF,EAAAA,GAAG,CAACG,EAAJ,CAAO,YAAP,EAAqB,UAAUC,EAAV,EAAc;AAAE;AACnC,QAAIC,GAAG,GAAGD,EAAE,CAACE,UAAH,CAAcD,GAAxB;AACAJ,IAAAA,OAAO,CAACC,IAAR,CAAaG,GAAb;;AACA,QAAI;AACFE,MAAAA,MAAM,CAACC,OAAP,CAAeC,aAAa,CAACJ,GAAD,CAA5B,EAAmC,UAAUK,OAAV,EAAmB;AAAE;AACtDN,QAAAA,EAAE,CAACO,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAeH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAA1B,CAAR,EAA2C,YAAY,CACtD,CADD;AAED,OAHD;AAID,KALD,CAMA,OAAOC,CAAP,EAAU;AAAE;AACVd,MAAAA,OAAO,CAACe,GAAR,CAAY,gCAAZ,EAA8CX,GAA9C;AACD;;AAAA;AACF,GAZD;AAaD,CAhBD;;AAkBA,SAASI,aAAT,CAAuBJ,GAAvB,EAA4B;AAAE;AAC5B,MAAIY,KAAK,GAAGZ,GAAG,CAACa,KAAJ,CAAU,GAAV,CAAZ;AACAD,EAAAA,KAAK,CAACE,KAAN;AACA,MAAIC,MAAM,GAAGxB,SAAb;;AACA,OAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,IAAAA,MAAM,GAAGA,MAAM,CAACH,KAAK,CAACI,CAAD,CAAN,CAAf;AACD;;AACD,SAAOD,MAAP;AACD,C,CAED;AACA;AACA;AACA;AACA","sourcesContent":["var WebSocketServer = require('ws').Server,\n  resources = require('./../resources/model');\n\nexports.listen = function(server) {\n  var wss = new WebSocketServer({server: server}); //#A\n  console.info('WebSocket server started...');\n  wss.on('connection', function (ws) { //#B\n    var url = ws.upgradeReq.url;\n    console.info(url);\n    try {\n      Object.observe(selectResouce(url), function (changes) { //#C\n        ws.send(JSON.stringify(changes[0].object), function () {\n        });\n      })\n    }\n    catch (e) { //#D\n      console.log('Unable to observe %s resource!', url);\n    };\n  });\n};\n\nfunction selectResouce(url) { //#E\n  var parts = url.split('/');\n  parts.shift();\n  var result = resources;\n  for (var i = 0; i < parts.length; i++) {\n    result = result[parts[i]];\n  }\n  return result;\n}\n\n//#A Create a WebSockets server by passing it the Express server\n//#B Triggered after a protocol upgrade when the client connected\n//#C Register an observer corresponding to the resource in the protocol upgrade URL\n//#D Use a try/catch to catch to intercept errors (e.g., malformed/unsupported URLs)\n//#E This function takes a request URL and returns the corresponding resource\n\n"],"file":"websockets.dev.js"}