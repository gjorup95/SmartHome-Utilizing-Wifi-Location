{"version":3,"sources":["http.js"],"names":["express","require","actuatorsRoutes","sensorRoutes","resources","converter","bodyParser","app","cors","path","use","json","join","module","exports"],"mappings":"aACA,IAAIA,QAAUC,QAAQ,WADtBC,gBAAAD,QAAA,yBACAE,aAAcF,QAAQ,uBAAtBG,UAEED,QAAeF,wBAFjBI,UAGCJ,QAAA,6BACCG,KAASH,QAAGA,QAJdK,WAKWL,QAAU,eALrBM,IAMEC,UAIF,IAAIC,KAAOR,QAAQ,QAFlBM,IAAGG,IAAGV,WACNW,QAGDJ,IAAIG,IAAIF,QAERD,IAAIG,IAAI,gBAAiBR,iBAHxBK,IAAIG,IAAIJ,cAAAH,cAGTI,IAAIG,IAAI,MAAA,SAAiBR,EAAAA,GACzBK,EAAIG,SAAID,KAAAG,KAAeT,UAAvB,4BAeAI,IAAAG,IAAAL,aAEAQ,OAAOC,QAAUP","file":"http.min.js","sourcesContent":["// Final version\nvar express = require('express'),\n  actuatorsRoutes = require('./../routes/actuators'),\n  sensorRoutes = require('./../routes/sensors'),\n //TODO: thingsRoutes = require('./../routes/things'),\n  resources = require('./../resources/model'),\n  converter = require('./../middleware/converter'),\n  cors = require('cors'),\n  bodyParser = require('body-parser');\n app = express();\n //app.set('view engine', 'pug');\nvar path = require('path');\n app.use(bodyParser.json());\napp.use(cors());\n\napp.use('/pi/actuators', actuatorsRoutes);\napp.use('/pi/sensors', sensorRoutes);\n\napp.get('/pi', function (req, res) {\n  res.sendFile(path.join(__dirname + './../views/index.html'));\n});\n/*app.get('/pi', function (req, res) {\n  res.render('index', { title: 'Web of things', message: 'Welcome to Gjorup Raspberry Pi', \n  distSensor: resources.pi.sensors.distance.name, distSensorValue: resources.pi.sensors.distance.value, humSens: resources.pi.sensors.humidity.value, \n  humName: resources.pi.sensors.humidity.name, tempSens: resources.pi.sensors.temperature.value, \n  tempName: resources.pi.sensors.temperature.name, led1: resources.pi.actuators.leds[1].value,\n  led2: resources.pi.actuators.leds[2].value, led3: resources.pi.actuators.leds[3].value,\n  })\n})\n*/\n\n// For representation design\napp.use(converter());\nmodule.exports = app;\n\n"]}